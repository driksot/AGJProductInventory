@inject ICategoryService _categoryService

<EditForm Model="_category" OnInvalidSubmit="SaveAsync">
    <MudDialog>
        <TitleContent>
            <MudText Typo="Typo.h6">
                <MudIcon Icon="@Icons.Material.Filled.Add" Class="mr-3 mb-n1" />
                @($"{_title} Category".ToUpper())
            </MudText>
        </TitleContent>
        <DialogContent>
            <MudGrid>
                <MudItem xs="12">
                    <MudTextField @bind-Value="_category.Name" T="string" Label="Name" Required />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
            <MudButton DisableElevation Variant="Variant.Filled" OnClick="Cancel">Cancel</MudButton>
            @if (_category.Id != 0)
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Secondary">Update</MudButton>
            }
            else
            {
                <MudButton DisableElevation Variant="Variant.Filled" ButtonType="ButtonType.Submit" Color="Color.Success">Save</MudButton>
            }

        </DialogActions>
    </MudDialog>
</EditForm>

@code {
    [Parameter] public int Id { get; set; }

    [CascadingParameter] MudDialogInstance MudDialog { get; set; }

    public CategoryViewModel _category { get; set; } = new CategoryViewModel();
    private string _title = "Add";
    public bool _isLoading { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            if (Id == 0)
            {
                // create
                _isLoading = false;
            }
            else
            {
                // update
                _title = "Update";
                await LoadCategory();
            }
        }
    }

    private async Task LoadCategory()
    {
        _isLoading = true;
        StateHasChanged();
        _category = await _categoryService.Get(Id);
        _isLoading = false;
        StateHasChanged();
    }

    public void Cancel()
    {
        MudDialog.Cancel();
    }

    private async Task SaveAsync()
    {
        if (_category.Id == 0)
        {
            // Create Category
            await _categoryService.Create(_category);
        }
        else
        {
            // Update Category
            await _categoryService.Update(_category);
        }

        MudDialog.Close();
    }
}
